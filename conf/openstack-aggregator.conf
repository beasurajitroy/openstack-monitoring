input {
  file {
    type => "openstack-aggregate"

    path => [ "/Monitoring/openstack/logs/*-monitoring.log" ]
    discover_interval => 10
    #start_position => "beginning"
}
}

filter {


  if [type] == "openstack-aggregate" {
    
      grok {
      match => [ "message", "\I,\s\[%{TIMESTAMP_ISO8601:post_date} \#%{NUMBER:num}\]  %{LOGLEVEL:info} \--\ \:\ %{DATA:tenant} %{TIMESTAMP_ISO8601:timestamp} %{IP:ip} %{DATA:instanceid} %{WORD:vmstatus} %{WORD:organization} %{HOSTNAME:hypervisor} %{DATA:availzone} %{DATA:imageid} %{GREEDYDATA:canConnect}" ]
         }

         if "_grokparsefailure" in [tags] {
                   
                    grok {
                          match => [ "message", "\I,\s\[%{TIMESTAMP_ISO8601:post_date} \#%{NUMBER:num}\]  %{LOGLEVEL:info} \--\ \:\ %{DATA:tenant} %{TIMESTAMP_ISO8601:timestamp} %{IP:ip} %{DATA:instanceid} %{WORD:vmstatus} \s%{HOSTNAME:hypervisor} %{DATA:availzone} %{DATA:imageid} %{GREEDYDATA:canConnect}" ]
                       }
                     
             }
    }
  
}

output {


  elasticsearch_http {
    host => "dfw-mon7.prod.com"
    port => "9200"
    index => "openstack-aggregate-%{+YYYY.MM.dd}"
    template => "/Monitoring/openstack/conf/elasticsearch-template.json"
  }
}
